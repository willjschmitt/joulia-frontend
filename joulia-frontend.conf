# Handles HTTP to HTTPS redirect for brew.joulia.io.
#server {
#    listen      80;
#    listen      [::]:80;
#    server_name brew.joulia.io;
#    return 301 https://$host$request_uri;
#}

# Handles HTTP to HTTPS redirect for joulia.io.
#server {
#    listen      80;
#    listen      [::]:80;
#    server_name joulia.io;
#    return 301 https://$host$request_uri;
#}

resolver 10.43.240.10 valid=30s;

upstream joulia_webserver {
    server joulia-webserver.default.svc.cluster.local;
}

upstream joulia_static {
    server static.joulia.io;
}

server {
    listen      80;
    listen      [::]:80;
    #listen      443 ssl; # managed by Certbot
    server_name brew.joulia.io;

    # Serve root at / and only at / to our index.html file.
    location = / {
        include /etc/nginx/joulia-frontend/gcs-proxy.conf;
        proxy_pass http://joulia_static/static/index.html;
    }

    # Serve all static files for static sub-url.
    location ^~ /static {
        include /etc/nginx/joulia-frontend/gcs-proxy.conf;
        proxy_pass http://joulia_static;
    }

    include /etc/nginx/joulia-frontend/backend.conf;

    # Added with command:
    # $ certbot --nginx
    #ssl_certificate /etc/letsencrypt/live/brew.joulia.io/fullchain.pem; # managed by Certbot
    #ssl_certificate_key /etc/letsencrypt/live/brew.joulia.io/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
}

server {
    listen      80;
    listen      [::]:80;
    #listen      443 ssl; # managed by Certbot
    server_name joulia.io;

    # Serve root at / and only at / to our index.html file.
    location = / {
        include /etc/nginx/joulia-frontend/gcs-proxy.conf;
        proxy_pass http://joulia_static/static/public_index.html;
    }

    # Serve all static files for static sub-url.
    location ^~ /static {
        include /etc/nginx/joulia-frontend/gcs-proxy.conf;
        proxy_pass http://joulia_static;
    }

    include /etc/nginx/joulia-frontend/backend.conf;

    # Added with command:
    # $ certbot --nginx
    #ssl_certificate /etc/letsencrypt/live/joulia.io/fullchain.pem; # managed by Certbot
    #ssl_certificate_key /etc/letsencrypt/live/joulia.io/privkey.pem; # managed by Certbot
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

}

